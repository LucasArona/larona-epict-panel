{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@grafana/ui\"","webpack:///external \"emotion\"","webpack:///external \"tslib\"","webpack:///external \"@grafana/runtime\"","webpack:///external \"@grafana/data\"","webpack:///./symLibrary.ts","webpack:///./Utilities.tsx","webpack:///./EpictPanel.tsx","webpack:///./MigHandler.tsx","webpack:///./module.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","SymbolsLibrary","label","width","height","factor","getLastNotNullValue","fields","decimals","retVal","lastNotNullValueIndex","values","length","toFixed","toString","dragBox","isDrag","oldX","oldY","oldMX","oldMY","inBox","onBgClick","event","ctrlKey","alert","nativeEvent","offsetX","offsetY","getUrlSearchParams","editPanel","getStyles","wrapper","imgWrapper","box","boxLink","orbDefaults","blink","alignVertically","boxPrefix","boxSuffix","options","data","onOptionsChange","processedBgURL","replace","bgURL","boxes","boxMouseUpHandler","onBoxMouseUp","styles","className","onMouseMove","offX","clientX","offY","clientY","xpos","ypos","onBoxMouseMove","onClick","button","deselectAllBoxes","onBackgroundClick","id","srcSet","map","oneBox","index","onMouseDown","$","document","one","preventDefault","onBoxMouseDown","selected","onBoxMouseClick","getBoxColor","angle","url","href","hasOrb","orbHideText","orbLocation","isBoxBlinking","orbSize","title","getBoxTitleText","fontSize","symbol","colorSymbol","symbolWidth","symbolHeight","customSymbol","onlyShowSymbol","prefix","prefixSize","getBoxText","suffix","suffixSize","isUsingThresholds","thresholds","blinkHigh","blinkLow","lowThreshold","split","highThreshold","colorHigh","colorLow","colorMedium","color","concat","getBoxValue","serie","decimal","forEach","b","unbind","serieName","undefined","series","every","frm","targetField","filter","f","type","find","fieldDisplayName","getLastNotNullStringValue","setPanelOptions","builder","addTextInput","path","addCustomEditor","defaultValue","editor","props","ctx","context","onBoxCustomSymbolChanged","target","onChange","orbLocations","availableSeries","oneValField","discoveredField","push","size","surface","splice","onDeleteBox","onCloneBox","readOnly","icon","selectedItem","variant","theme","content","v","symbolDefWidth","symbolDefHeight","checked","location","onBoxColorLowChanged","onBoxColorMediumChanged","onBoxColorHighChanged","onBoxColorChanged","hasBackground","backgroundColor","text","setMigrationHandler","panel","pluginVersion","Opts","oldBox","fontsize","usingThresholds","URL"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","// attention. In the svg files add  preserveAspectRatio=\"none\" to the svg tag to allow non-uniform scale\nexport const SymbolsLibrary = [\n  {\n    label: 'None',\n    value: '',\n    width: 32,\n    height: 32,\n    factor: 1,\n  },\n  {\n    label: 'Static Text',\n    value: 'text',\n    width: 32,\n    height: 32,\n    factor: 1,\n  },\n  {\n    label: 'Custom Symbol',\n    value: 'custom',\n    width: 32,\n    height: 32,\n    factor: 1,\n  },\n  {\n    label: 'Arrow 1',\n    value: 'public/plugins/larona-epict-panel/symbols/Arrow1.svg',\n    width: 32,\n    height: 32,\n    factor: 1,\n  },\n  {\n    label: 'Arrow 2',\n    value: 'public/plugins/larona-epict-panel/symbols/Arrow2.svg',\n    width: 32,\n    height: 32,\n    factor: 1,\n  },\n  {\n    label: 'Flat Vessel 1',\n    value: 'public/plugins/larona-epict-panel/symbols/FlatVessel1.svg',\n    width: 16,\n    height: 32,\n    factor: 8,\n  },\n  {\n    label: 'Line 1',\n    value: 'public/plugins/larona-epict-panel/symbols/Line1.svg',\n    width: 32,\n    height: 32,\n    factor: 1,\n  },\n  {\n    label: 'Mixer 1',\n    value: 'public/plugins/larona-epict-panel/symbols/Mixer1.svg',\n    width: 32,\n    height: 32,\n    factor: 2,\n  },\n  {\n    label: 'Motor 1',\n    value: 'public/plugins/larona-epict-panel/symbols/Motor1.svg',\n    width: 32,\n    height: 32,\n    factor: 2,\n  },\n  {\n    label: 'Pipe 1',\n    value: 'public/plugins/larona-epict-panel/symbols/Pipe1.svg',\n    width: 32,\n    height: 32,\n    factor: 1,\n  },\n  {\n    label: 'Pipe 2',\n    value: 'public/plugins/larona-epict-panel/symbols/Pipe2.svg',\n    width: 32,\n    height: 32,\n    factor: 2,\n  },\n  {\n    label: 'Pipe 3',\n    value: 'public/plugins/larona-epict-panel/symbols/Pipe3.svg',\n    width: 32,\n    height: 32,\n    factor: 2,\n  },\n  {\n    label: 'Pump 1',\n    value: 'public/plugins/larona-epict-panel/symbols/Pump1.svg',\n    width: 32,\n    height: 32,\n    factor: 2,\n  },\n  {\n    label: 'Tank 1',\n    value: 'public/plugins/larona-epict-panel/symbols/Tank1.svg',\n    width: 16,\n    height: 32,\n    factor: 8,\n  },\n  {\n    label: 'Tank 2',\n    value: 'public/plugins/larona-epict-panel/symbols/Tank2.svg',\n    width: 16,\n    height: 32,\n    factor: 8,\n  },\n  {\n    label: 'Tank 3',\n    value: 'public/plugins/larona-epict-panel/symbols/Tank3.svg',\n    width: 16,\n    height: 32,\n    factor: 8,\n  },\n  {\n    label: 'Valve 1',\n    value: 'public/plugins/larona-epict-panel/symbols/Valve1.svg',\n    width: 32,\n    height: 16,\n    factor: 2,\n  },\n  {\n    label: 'Valve 2',\n    value: 'public/plugins/larona-epict-panel/symbols/Valve2.svg',\n    width: 32,\n    height: 32,\n    factor: 2,\n  },\n];\n","import { Field, Vector } from '@grafana/data';\n\nexport function getLastNotNullValue(fields: Field<any, Vector<any>> | undefined, decimals: number) {\n  let retVal = 'N/A';\n  let lastNotNullValueIndex = fields?.values.length;\n  if (lastNotNullValueIndex) {\n    while (lastNotNullValueIndex-- && fields?.values.get(lastNotNullValueIndex) == null) {} //Find the last non-null value\n    if (lastNotNullValueIndex !== -1) {\n      // If we only have null values, index = -1\n      retVal = fields?.values.get(lastNotNullValueIndex).toFixed(decimals).toString();\n    }\n  }\n  return retVal;\n}\n\nexport function getLastNotNullStringValue(fields: Field<any, Vector<any>> | undefined) {\n  let retVal = 'N/A';\n  let lastNotNullValueIndex = fields?.values.length;\n  if (lastNotNullValueIndex) {\n    while (lastNotNullValueIndex-- && fields?.values.get(lastNotNullValueIndex) == null) {} //Find the last non-null value\n    if (lastNotNullValueIndex !== -1) {\n      // If we only have null values, index = -1\n      retVal = fields?.values.get(lastNotNullValueIndex).toString();\n    }\n  }\n  return retVal;\n}\n","import React from 'react';\nimport { DataFrame, FieldType, getFieldDisplayName, PanelProps, urlUtil } from '@grafana/data';\nimport { SimpleOptions, Box } from 'types';\nimport { css, cx } from 'emotion';\nimport { stylesFactory } from '@grafana/ui';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { getLastNotNullStringValue, getLastNotNullValue } from './Utilities';\n\ndeclare let $: any;\n\ninterface Props extends PanelProps<SimpleOptions> {}\nexport const SimplePanel: React.FC<Props> = ({ options, data, onOptionsChange, width, height }) => {\n  let processedBgURL = getTemplateSrv().replace(options.bgURL);\n  let boxes = options.boxes;\n  let boxMouseUpHandler = () => {\n    onBoxMouseUp();\n  };\n  const styles = getStyles();\n  return (\n    <div\n      className={cx(styles.wrapper)}\n      onMouseMove={(event) => onBoxMouseMove(event)}\n      onClick={(event) => onBackgroundClick(event)}\n    >\n      <div className={cx(styles.imgWrapper)} id=\"img-wrapper\">\n        <img srcSet={processedBgURL} onClick={(event) => onBgClick(event)} />\n        {boxes.map((oneBox, index) => (\n          <span\n            onMouseDown={(event) => onBoxMouseDown(event, oneBox)}\n            onClick={(event) => onBoxMouseClick(event, oneBox)}\n            key={index}\n            className={cx(\n              styles.box,\n              css`\n                ${isEditMode() && oneBox.selected ? 'border-radius: 15px;' : null}\n                ${isEditMode() && oneBox.selected ? 'border: dotted;' : null}\n                top: ${oneBox.ypos}px;\n                left: ${oneBox.xpos}px;\n                color: ${getBoxColor(oneBox)};\n                transform: rotate(${oneBox.angle}deg);\n              `\n            )}\n          >\n            {oneBox.url && !isEditMode() ? (\n              <a\n                href={oneBox.url ? getTemplateSrv().replace(oneBox.url) : '#'}\n                className={cx(\n                  styles.boxLink,\n                  oneBox.url\n                    ? css`\n                        cursor: pointer;\n                      `\n                    : css`\n                        cursor: default;\n                      `\n                )}\n              >\n                {(oneBox.hasOrb && oneBox.orbHideText) ||\n                (oneBox.hasOrb && !oneBox.orbHideText && oneBox.orbLocation === 'Top') ? (\n                  <span\n                    className={cx(\n                      isBoxBlinking(oneBox) ? styles.blink : '',\n                      styles.orbDefaults,\n                      css`\n                        height: ${oneBox.orbSize}px;\n                        width: ${oneBox.orbSize}px;\n                        background-color: ${getBoxColor(oneBox)};\n                      `\n                    )}\n                    title={getBoxTitleText(oneBox)}\n                  ></span>\n                ) : null}\n                {!oneBox.hasOrb || !oneBox.orbHideText ? (\n                  <div\n                    className={cx(\n                      css`\n                        font-size: ${oneBox.fontSize}px;\n                        line-heigh: normal;\n                      `\n                    )}\n                  >\n                    {oneBox.symbol !== '' &&\n                    !oneBox.colorSymbol &&\n                    oneBox.symbol !== 'text' &&\n                    oneBox.symbol !== 'custom' ? (\n                      <img\n                        srcSet={getTemplateSrv().replace(oneBox.symbol)}\n                        width={oneBox.symbolWidth}\n                        height={oneBox.symbolHeight}\n                      />\n                    ) : null}\n                    {oneBox.symbol !== '' &&\n                    oneBox.colorSymbol &&\n                    oneBox.symbol !== 'text' &&\n                    oneBox.symbol !== 'custom' ? (\n                      <span\n                        className={cx(\n                          isBoxBlinking(oneBox) ? styles.blink : '',\n                          css`\n                            height: ${oneBox.symbolHeight}px;\n                            width: ${oneBox.symbolWidth}px;\n                            background: ${getBoxColor(oneBox)};\n                            mask-size: cover;\n                            display: inline-block;\n                            mask: url(${getTemplateSrv().replace(oneBox.symbol)});\n                          `\n                        )}\n                      />\n                    ) : null}\n                    {oneBox.symbol === 'custom' && !oneBox.colorSymbol && oneBox.customSymbol !== '' ? (\n                      <img\n                        srcSet={getTemplateSrv().replace(oneBox.customSymbol)}\n                        width={oneBox.symbolWidth}\n                        height={oneBox.symbolHeight}\n                      />\n                    ) : null}\n                    {oneBox.symbol === 'custom' && oneBox.colorSymbol && oneBox.customSymbol !== '' ? (\n                      <span\n                        className={cx(\n                          isBoxBlinking(oneBox) ? styles.blink : '',\n                          css`\n                            height: ${oneBox.symbolHeight}px;\n                            width: ${oneBox.symbolWidth}px;\n                            background: ${getBoxColor(oneBox)};\n                            mask-size: cover;\n                            display: inline-block;\n                            mask: url(${getTemplateSrv().replace(oneBox.customSymbol)});\n                          `\n                        )}\n                      />\n                    ) : null}\n                    {oneBox.symbol === 'text' ? (\n                      <span\n                        className={cx(\n                          isBoxBlinking(oneBox) ? styles.blink : '',\n                          styles.alignVertically,\n                          css`\n                            height: ${oneBox.symbolHeight}px;\n                            width: ${oneBox.symbolWidth}px;\n                          `\n                        )}\n                      >\n                        {oneBox.customSymbol}\n                      </span>\n                    ) : null}\n                    {!oneBox.onlyShowSymbol && oneBox.hasOrb && oneBox.orbLocation === 'Left' ? (\n                      <span\n                        className={cx(\n                          isBoxBlinking(oneBox) ? styles.blink : '',\n                          styles.orbDefaults,\n                          styles.alignVertically,\n                          css`\n                            height: ${oneBox.orbSize}px;\n                            width: ${oneBox.orbSize}px;\n                            background-color: ${getBoxColor(oneBox)};\n                          `\n                        )}\n                        title={getBoxTitleText(oneBox)}\n                      ></span>\n                    ) : null}\n\n                    {!oneBox.onlyShowSymbol && oneBox.prefix ? (\n                      <span\n                        className={cx(\n                          styles.alignVertically,\n                          styles.boxPrefix,\n                          css`\n                            font-size: ${oneBox.prefixSize}px;\n                          `\n                        )}\n                        title={getBoxTitleText(oneBox)}\n                      >\n                        {oneBox.prefix}\n                      </span>\n                    ) : null}\n\n                    {!oneBox.onlyShowSymbol ? (\n                      <span className={cx(isBoxBlinking(oneBox) ? styles.blink : '', styles.alignVertically)}>\n                        {getBoxText(oneBox)}\n                      </span>\n                    ) : null}\n\n                    {!oneBox.onlyShowSymbol && oneBox.suffix ? (\n                      <span\n                        className={cx(\n                          isBoxBlinking(oneBox) ? styles.blink : '',\n                          styles.alignVertically,\n                          styles.boxSuffix,\n                          css`\n                            font-size: ${oneBox.suffixSize}px;\n                          `\n                        )}\n                        title={getBoxTitleText(oneBox)}\n                      >\n                        {oneBox.suffix}\n                      </span>\n                    ) : null}\n\n                    {oneBox.hasOrb && oneBox.orbLocation === 'Right' ? (\n                      <span\n                        className={cx(\n                          isBoxBlinking(oneBox) ? styles.blink : '',\n                          styles.orbDefaults,\n                          styles.alignVertically,\n                          css`\n                            height: ${oneBox.orbSize}px;\n                            width: ${oneBox.orbSize}px;\n                            background-color: ${getBoxColor(oneBox)};\n                          `\n                        )}\n                        title={getBoxTitleText(oneBox)}\n                      ></span>\n                    ) : null}\n                  </div>\n                ) : null}\n                {oneBox.hasOrb && !oneBox.orbHideText && oneBox.orbLocation === 'Bottom' ? (\n                  <span\n                    className={cx(\n                      isBoxBlinking(oneBox) ? styles.blink : '',\n                      styles.orbDefaults,\n                      css`\n                        height: ${oneBox.orbSize}px;\n                        width: ${oneBox.orbSize}px;\n                        background-color: ${getBoxColor(oneBox)};\n                      `\n                    )}\n                    title={getBoxTitleText(oneBox)}\n                  ></span>\n                ) : null}\n              </a>\n            ) : null}\n\n            {oneBox.url === '' || isEditMode() ? (\n              <span className={cx(styles.boxLink)}>\n                {(oneBox.hasOrb && oneBox.orbHideText) ||\n                (oneBox.hasOrb && !oneBox.orbHideText && oneBox.orbLocation === 'Top') ? (\n                  <span\n                    className={cx(\n                      isBoxBlinking(oneBox) ? styles.blink : '',\n                      styles.orbDefaults,\n                      css`\n                        height: ${oneBox.orbSize}px;\n                        width: ${oneBox.orbSize}px;\n                        background-color: ${getBoxColor(oneBox)};\n                      `\n                    )}\n                    title={getBoxTitleText(oneBox)}\n                  ></span>\n                ) : null}\n                {!oneBox.hasOrb || !oneBox.orbHideText ? (\n                  <div\n                    className={cx(\n                      css`\n                        font-size: ${oneBox.fontSize}px;\n                        line-heigh: normal;\n                      `\n                    )}\n                  >\n                    {oneBox.symbol !== '' &&\n                    !oneBox.colorSymbol &&\n                    oneBox.symbol !== 'text' &&\n                    oneBox.symbol !== 'custom' ? (\n                      <img\n                        srcSet={getTemplateSrv().replace(oneBox.symbol)}\n                        width={oneBox.symbolWidth}\n                        height={oneBox.symbolHeight}\n                      />\n                    ) : null}\n                    {oneBox.symbol !== '' &&\n                    oneBox.colorSymbol &&\n                    oneBox.symbol !== 'text' &&\n                    oneBox.symbol !== 'custom' ? (\n                      <span\n                        className={cx(\n                          isBoxBlinking(oneBox) ? styles.blink : '',\n                          css`\n                            height: ${oneBox.symbolHeight}px;\n                            width: ${oneBox.symbolWidth}px;\n                            background: ${getBoxColor(oneBox)};\n                            mask-size: cover;\n                            display: inline-block;\n                            mask: url(${getTemplateSrv().replace(oneBox.symbol)});\n                          `\n                        )}\n                      />\n                    ) : null}\n                    {oneBox.symbol === 'custom' && !oneBox.colorSymbol && oneBox.customSymbol !== '' ? (\n                      <img\n                        srcSet={getTemplateSrv().replace(oneBox.customSymbol)}\n                        width={oneBox.symbolWidth}\n                        height={oneBox.symbolHeight}\n                      />\n                    ) : null}\n                    {oneBox.symbol === 'custom' && oneBox.colorSymbol && oneBox.customSymbol !== '' ? (\n                      <span\n                        className={cx(\n                          isBoxBlinking(oneBox) ? styles.blink : '',\n                          css`\n                            height: ${oneBox.symbolHeight}px;\n                            width: ${oneBox.symbolWidth}px;\n                            background: ${getBoxColor(oneBox)};\n                            mask-size: cover;\n                            display: inline-block;\n                            mask: url(${getTemplateSrv().replace(oneBox.customSymbol)});\n                          `\n                        )}\n                      />\n                    ) : null}\n                    {oneBox.symbol === 'text' ? (\n                      <span\n                        className={cx(\n                          isBoxBlinking(oneBox) ? styles.blink : '',\n                          styles.alignVertically,\n                          css`\n                            height: ${oneBox.symbolHeight}px;\n                            width: ${oneBox.symbolWidth}px;\n                          `\n                        )}\n                      >\n                        {oneBox.customSymbol}\n                      </span>\n                    ) : null}\n                    {!oneBox.onlyShowSymbol && oneBox.hasOrb && oneBox.orbLocation === 'Left' ? (\n                      <span\n                        className={cx(\n                          isBoxBlinking(oneBox) ? styles.blink : '',\n                          styles.orbDefaults,\n                          styles.alignVertically,\n                          css`\n                            height: ${oneBox.orbSize}px;\n                            width: ${oneBox.orbSize}px;\n                            background-color: ${getBoxColor(oneBox)};\n                          `\n                        )}\n                        title={getBoxTitleText(oneBox)}\n                      ></span>\n                    ) : null}\n\n                    {!oneBox.onlyShowSymbol && oneBox.prefix ? (\n                      <span\n                        className={cx(\n                          styles.alignVertically,\n                          styles.boxPrefix,\n                          css`\n                            font-size: ${oneBox.prefixSize}px;\n                          `\n                        )}\n                        title={getBoxTitleText(oneBox)}\n                      >\n                        {oneBox.prefix}\n                      </span>\n                    ) : null}\n\n                    {!oneBox.onlyShowSymbol ? (\n                      <span className={cx(isBoxBlinking(oneBox) ? styles.blink : '', styles.alignVertically)}>\n                        {getBoxText(oneBox)}\n                      </span>\n                    ) : null}\n\n                    {!oneBox.onlyShowSymbol && oneBox.suffix ? (\n                      <span\n                        className={cx(\n                          isBoxBlinking(oneBox) ? styles.blink : '',\n                          styles.alignVertically,\n                          styles.boxSuffix,\n                          css`\n                            font-size: ${oneBox.suffixSize}px;\n                          `\n                        )}\n                        title={getBoxTitleText(oneBox)}\n                      >\n                        {oneBox.suffix}\n                      </span>\n                    ) : null}\n\n                    {oneBox.hasOrb && oneBox.orbLocation === 'Right' ? (\n                      <span\n                        className={cx(\n                          isBoxBlinking(oneBox) ? styles.blink : '',\n                          styles.orbDefaults,\n                          styles.alignVertically,\n                          css`\n                            height: ${oneBox.orbSize}px;\n                            width: ${oneBox.orbSize}px;\n                            background-color: ${getBoxColor(oneBox)};\n                          `\n                        )}\n                        title={getBoxTitleText(oneBox)}\n                      ></span>\n                    ) : null}\n                  </div>\n                ) : null}\n                {oneBox.hasOrb && !oneBox.orbHideText && oneBox.orbLocation === 'Bottom' ? (\n                  <span\n                    className={cx(\n                      isBoxBlinking(oneBox) ? styles.blink : '',\n                      styles.orbDefaults,\n                      css`\n                        height: ${oneBox.orbSize}px;\n                        width: ${oneBox.orbSize}px;\n                        background-color: ${getBoxColor(oneBox)};\n                      `\n                    )}\n                    title={getBoxTitleText(oneBox)}\n                  ></span>\n                ) : null}\n              </span>\n            ) : null}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n\n  function isBoxBlinking(box: Box): boolean {\n    if (box.isUsingThresholds && box.thresholds && (box.blinkHigh || box.blinkLow)) {\n      const value = getBoxText(box);\n      const lowThreshold = +box.thresholds.split(',')[0];\n      const highThreshold = +box.thresholds.split(',')[1];\n      if (box.blinkHigh && +value >= highThreshold) {\n        return true;\n      } else if (box.blinkLow && +value <= lowThreshold) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function getBoxColor(box: Box): string {\n    const value = getBoxText(box);\n    if (box.isUsingThresholds && box.thresholds) {\n      const lowThreshold = +box.thresholds.split(',')[0];\n      const highThreshold = +box.thresholds.split(',')[1];\n      if (+value >= highThreshold) {\n        return box.colorHigh;\n      } else if (+value <= lowThreshold) {\n        return box.colorLow;\n      } else {\n        return box.colorMedium;\n      }\n    }\n    return box.color;\n  }\n\n  function getBoxTitleText(box: Box): string {\n    return box.prefix ?? ''.concat(getBoxValue(box.serie, 5)) ?? ''.concat(box.suffix);\n  }\n  function getBoxText(box: Box): string {\n    return getBoxValue(box.serie, box.decimal);\n  }\n\n  function onBoxMouseClick(event: any, box: Box) {\n    if (isEditMode() && event.button === 0) {\n      inBox = true;\n      deselectAllBoxes();\n\n      box.selected = true;\n\n      onOptionsChange(options);\n    }\n  }\n\n  function onBackgroundClick(event: any) {\n    if (isEditMode() && event.button === 0 && !inBox) {\n      deselectAllBoxes();\n\n      onOptionsChange(options);\n    }\n\n    inBox = false;\n  }\n\n  function deselectAllBoxes() {\n    options.boxes.forEach((b) => {\n      b.selected = false;\n    });\n  }\n\n  function onBoxMouseDown(event: any, box: Box) {\n    if (isEditMode() && event.button === 0) {\n      dragBox = box;\n      oldX = box.xpos * 1;\n      oldY = box.ypos * 1;\n      oldMX = event.clientX * 1;\n      oldMY = event.clientY * 1;\n      isDrag = true;\n\n      $(document).one('mouseup', boxMouseUpHandler.bind(boxMouseUpHandler));\n\n      event.preventDefault();\n    }\n  }\n\n  function onBoxMouseMove(event: any) {\n    if (isDrag && isEditMode()) {\n      let offX = event.clientX - oldMX;\n      let offY = event.clientY - oldMY;\n\n      dragBox.xpos = oldX + offX;\n      dragBox.ypos = oldY + offY;\n\n      onOptionsChange(options);\n    }\n  }\n\n  function onBoxMouseUp() {\n    $(document).unbind('mouseup', boxMouseUpHandler.bind(boxMouseUpHandler));\n    isDrag = false;\n  }\n\n  function getBoxValue(serieName: string, decimals: number): string {\n    let retVal = undefined;\n\n    let serie = undefined;\n\n    data.series.every((frm: DataFrame) => {\n      let numberFields = frm.fields.filter((f) => f.type === FieldType.number);\n      let targetField = numberFields.find(function (f) {\n        const fieldDisplayName = getFieldDisplayName(f, frm);\n        let discoveredField =\n          frm.name === undefined || frm.name === fieldDisplayName\n            ? fieldDisplayName\n            : `${frm.name} (${fieldDisplayName})`;\n        return discoveredField === serieName;\n      });\n      if (targetField !== undefined && targetField !== null) {\n        retVal = getLastNotNullValue(targetField, decimals);\n        return false; //We found what we were looking for, so stop iterating\n      }\n      return true; //Continue iterating\n    });\n\n    if (retVal === undefined) {\n      data.series.every((frm: DataFrame) => {\n        let targetField = frm.fields.find(function (f) {\n          const fieldDisplayName = getFieldDisplayName(f, frm);\n          let discoveredField =\n            frm.name === undefined || frm.name === fieldDisplayName\n              ? fieldDisplayName\n              : `${frm.name} (${fieldDisplayName})`;\n          return discoveredField === serieName;\n        });\n        if (targetField !== undefined && targetField !== null) {\n          retVal = getLastNotNullStringValue(targetField);\n          return false; //We found what we were looking for, so stop iterating\n        }\n        return true; //Continue iterating\n      });\n    }\n\n    if (retVal === undefined) {\n      serie = data.series.find((s) => s.name === serieName); /*for backward compatibility*/\n      let fields = serie?.fields.find((f) => f.type === 'number');\n      retVal = getLastNotNullValue(fields, decimals);\n    }\n\n    if (retVal === undefined) {\n      retVal = 'N/A';\n    }\n    return retVal;\n  }\n};\n\nlet onBgClick = (event: any) => {\n  if (event.ctrlKey) {\n    alert('X:' + event.nativeEvent.offsetX + ' Y:' + event.nativeEvent.offsetY);\n  }\n};\n\n//global variables\n//Drag Box variables\nlet dragBox: Box;\nlet isDrag: boolean;\nlet oldX: number;\nlet oldY: number;\nlet oldMX: number;\nlet oldMY: number;\nlet inBox: boolean;\n\nlet isEditMode = () => {\n  const params = urlUtil.getUrlSearchParams();\n  let editMode = params.editPanel != null;\n\n  return editMode;\n};\n\nconst getStyles = stylesFactory(() => {\n  return {\n    wrapper: css`\n      display: flex;\n      justify-content: center;\n      height: 100%;\n    `,\n    imgWrapper: css`\n      position: relative;\n    `,\n    box: css`\n      position: absolute;\n    `,\n    boxLink: css`\n      display: inline-block;\n      text-align: center;\n      color: unset;\n      &:hover {\n        color: unset;\n      }\n      &:focus {\n        color: unset;\n      }\n    `,\n    orbDefaults: css`\n      border-radius: 50%;\n      border-style: solid;\n      border-width: thin;\n      border-color: #000;\n      display: inline-block;\n      font-size: 0px;\n    `,\n    blink: css`\n      animation: blink_anim 0.8s linear infinite;\n      @keyframes blink_anim {\n        50% {\n          opacity: 0.2;\n        }\n      }\n    `,\n    alignVertically: css`\n      display: inline-block;\n      white-space: normal;\n      vertical-align: middle;\n    `,\n    boxPrefix: css`\n      white-space: pre;\n      margin-right: 0.5ch;\n    `,\n    boxSuffix: css`\n      white-space: pre;\n      margin-right: 0.5ch;\n    `,\n  };\n});\n","import { PanelModel } from '@grafana/data';\nimport { SimpleOptions } from 'types';\n\nclass Opts implements SimpleOptions {\n  bgURL!: string;\n  boxes!: Array<import('./types').Box>;\n}\n\nexport const MigHandler = (panel: PanelModel<Partial<SimpleOptions>> | any): Partial<SimpleOptions> => {\n  if (panel.boxes != null && panel.pluginVersion == null) {\n    //We found boxes to upgrade from an old plugin\n    console.log('Migrating from an older version', panel);\n    const options: SimpleOptions = new Opts();\n    options.bgURL = panel.bgURL;\n    options.boxes = [];\n    panel.boxes.forEach((oldBox: any) => {\n      console.log('Found a box to upgrade:', oldBox);\n      options.boxes.push({\n        angle: oldBox.angle,\n        color: oldBox.color,\n        colorHigh: oldBox.colorHigh,\n        colorLow: oldBox.colorLow,\n        colorMedium: oldBox.colorMedium,\n        decimal: oldBox.decimal,\n        fontSize: oldBox.fontsize,\n        hasOrb: oldBox.hasOrb,\n        hasBackground: false,\n        backgroundColor: '#5794F2',\n        orbHideText: oldBox.orbHideText,\n        orbLocation: oldBox.orbLocation,\n        orbSize: oldBox.orbSize,\n        prefixSize: oldBox.prefixSize,\n        serie: oldBox.serie,\n        suffixSize: oldBox.suffixSize,\n        text: oldBox.text,\n        suffix: oldBox.suffix,\n        prefix: oldBox.prefix,\n        thresholds: oldBox.thresholds,\n        blinkHigh: oldBox.blinkHigh,\n        blinkLow: oldBox.blinkLow,\n        isUsingThresholds: oldBox.usingThresholds,\n        xpos: oldBox.xpos,\n        ypos: oldBox.ypos,\n        url: oldBox.URL,\n        onlyShowSymbol: false,\n        symbol: '',\n        symbolWidth: 32,\n        symbolHeight: 32,\n        symbolDefWidth: 32,\n        symbolDefHeight: 32,\n        colorSymbol: false,\n        customSymbol: '',\n        selected: false,\n      });\n    });\n    return options;\n  } else {\n    //Nothing to do\n    console.log('MigHandler: Nothing to upgrade');\n    return panel.options;\n  }\n};\n","import { DataFrame, FieldType, getFieldDisplayName, PanelPlugin } from '@grafana/data';\nimport { Box, SimpleOptions } from './types';\nimport { SymbolsLibrary } from './symLibrary';\nimport { SimplePanel as EpictPanel } from './EpictPanel';\nimport { MigHandler } from 'MigHandler';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport React from 'react';\nimport {\n  Button,\n  ColorPicker,\n  Field,\n  HorizontalGroup,\n  Icon,\n  IconButton,\n  Input,\n  Select,\n  Switch,\n  Tooltip,\n  ValuePicker,\n} from '@grafana/ui';\n\nexport const plugin = new PanelPlugin<SimpleOptions>(EpictPanel)\n  .setPanelOptions((builder) => {\n    builder\n      .addTextInput({ name: 'Background URL', path: 'bgURL' })\n      .addCustomEditor({\n        path: 'boxes',\n        name: 'Selected Box',\n        id: 'selectedBox',\n        defaultValue: null,\n        editor: (props) => {\n          var ctx = (props as any).context;\n          var data = ctx.data;\n          var options = ctx.options as SimpleOptions;\n          if (options.boxes == null) {\n            options.boxes = [];\n          }\n          const onDeleteBox = ({ target }: any, index: number) => {\n            delete options.boxes[index];\n            options.boxes.splice(index, 1);\n            props.onChange(options.boxes);\n          };\n          const onCloneBox = ({ target }: any, box: Box) => {\n            options.boxes.push({ ...box });\n            props.onChange(options.boxes);\n          };\n          const onBoxSerieUpdated = (value: any, box: Box) => {\n            box.serie = value;\n            props.onChange(options.boxes);\n          };\n          const onBoxPrefixChanged = ({ target }: any, box: Box) => {\n            box.prefix = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxPrefixFontSizeChanged = ({ target }: any, box: Box) => {\n            box.prefixSize = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxSuffixChanged = ({ target }: any, box: Box) => {\n            box.suffix = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxSuffixFontSizeChanged = ({ target }: any, box: Box) => {\n            box.suffixSize = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxXposChanged = ({ target }: any, box: Box) => {\n            box.xpos = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxYposChanged = ({ target }: any, box: Box) => {\n            box.ypos = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxAngleChanged = ({ target }: any, box: Box) => {\n            box.angle = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxUrlChanged = ({ target }: any, box: Box) => {\n            box.url = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxDecimalChanged = ({ target }: any, box: Box) => {\n            box.decimal = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxFontsizeChanged = ({ target }: any, box: Box) => {\n            box.fontSize = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxOrbChanged = ({ target }: any, box: Box) => {\n            box.hasOrb = target.checked;\n            props.onChange(options.boxes);\n          };\n          const onBoxOrbHideTextChanged = ({ target }: any, box: Box) => {\n            box.orbHideText = target.checked;\n            props.onChange(options.boxes);\n          };\n          const onBoxOrbLocationChanged = (location: any, box: Box) => {\n            box.orbLocation = location.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxOnlySymbolChanged = ({ target }: any, box: Box) => {\n            box.onlyShowSymbol = target.checked;\n            props.onChange(options.boxes);\n          };\n          const onBoxColorSymbolChanged = ({ target }: any, box: Box) => {\n            box.colorSymbol = target.checked;\n            props.onChange(options.boxes);\n          };\n          const onBoxSymbolChanged = (symbol: any, box: Box) => {\n            box.symbol = symbol.value;\n            box.symbolDefWidth = symbol.width;\n            box.symbolWidth = symbol.width * symbol.factor;\n            box.symbolDefHeight = symbol.height;\n            box.symbolHeight = symbol.height * symbol.factor;\n            props.onChange(options.boxes);\n          };\n          const onBoxSymbolWidthChanged = ({ target }: any, box: Box) => {\n            box.symbolWidth = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxSymbolHeightChanged = ({ target }: any, box: Box) => {\n            box.symbolHeight = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxCustomSymbolChanged = ({ target }: any, box: Box) => {\n            box.customSymbol = target.value;\n            props.onChange(options.boxes);\n          };\n          // const onBoxHasBackgroundChanged = ({ target }: any, box: Box) => {\n          //   box.hasBackground = target.checked;\n          //   props.onChange(options.boxes);\n          // };\n          // const onBoxBackgroundColorChanged = (color: string, box: Box) => {\n          //   box.backgroundColor = color;\n          //   props.onChange(options.boxes);\n          // };\n          const onBoxUseThresholdsChanged = ({ target }: any, box: Box) => {\n            box.isUsingThresholds = target.checked;\n            props.onChange(options.boxes);\n          };\n          const onBoxThresholdsChanged = ({ target }: any, box: Box) => {\n            box.thresholds = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxColorChanged = (color: string, box: Box) => {\n            box.color = color;\n            props.onChange(options.boxes);\n          };\n          const onBoxColorLowChanged = (color: string, box: Box) => {\n            box.colorLow = color;\n            props.onChange(options.boxes);\n          };\n          const onBoxColorMediumChanged = (color: string, box: Box) => {\n            box.colorMedium = color;\n            props.onChange(options.boxes);\n          };\n          const onBoxColorHighChanged = (color: string, box: Box) => {\n            box.colorHigh = color;\n            props.onChange(options.boxes);\n          };\n          const onBoxBlinkHighChanged = ({ target }: any, box: Box) => {\n            box.blinkHigh = target.checked;\n            props.onChange(options.boxes);\n          };\n          const onBoxBlinkLowChanged = ({ target }: any, box: Box) => {\n            box.blinkLow = target.checked;\n            props.onChange(options.boxes);\n          };\n          const onBoxOrbSizeChanged = ({ target }: any, box: Box) => {\n            box.orbSize = target.value;\n            props.onChange(options.boxes);\n          };\n          const orbLocations = [\n            { label: 'Top', value: 'Top' },\n            { label: 'Bottom', value: 'Bottom' },\n            { label: 'Left', value: 'Left' },\n            { label: 'Right', value: 'Right' },\n          ];\n\n          let availableSeries: Array<{ value: string; label: string }> = [];\n          data.forEach((frm: DataFrame) => {\n            let valuesFields = frm.fields.filter((f) => f.type === FieldType.number);\n            valuesFields.forEach((oneValField) => {\n              if (oneValField !== undefined) {\n                const fieldDisplayName = getFieldDisplayName(oneValField, frm);\n                let discoveredField =\n                  frm.name === undefined || frm.name === fieldDisplayName\n                    ? fieldDisplayName\n                    : `${frm.name} (${fieldDisplayName})`;\n                availableSeries.push({ value: discoveredField, label: discoveredField });\n              }\n            });\n          });\n\n          return (\n            <div className=\"section gf-form-group\">\n              {options.boxes.map((oneBox, index) => (\n                <div key={index}>\n                  {oneBox.selected ? (\n                    <div>\n                      <h5>Box #{index}</h5>\n                      <div className=\"section gf-form-group\">\n                        <HorizontalGroup>\n                          <IconButton\n                            name=\"trash-alt\"\n                            size=\"xl\"\n                            surface=\"panel\"\n                            onClick={(event) => onDeleteBox(event, index)}\n                          />\n                          <IconButton\n                            name=\"copy\"\n                            size=\"xl\"\n                            surface=\"panel\"\n                            onClick={(event) => onCloneBox(event, oneBox)}\n                          />\n                        </HorizontalGroup>\n                      </div>\n                      <div className=\"section gf-form-group\">\n                        <h5 className=\"section-heading\">Metric</h5>\n                        <HorizontalGroup>\n                          <Field label=\"Name\">\n                            <Input type=\"text\" readOnly={true} value={oneBox.serie} width={16} />\n                          </Field>\n                          <ValuePicker\n                            label=\"Change Metric\"\n                            icon=\"exchange-alt\"\n                            options={availableSeries}\n                            onChange={(selectedItem) => onBoxSerieUpdated(selectedItem.value, oneBox)}\n                            variant=\"secondary\"\n                            size=\"sm\"\n                          />\n                          <Field label=\"Prefix\">\n                            <Input\n                              type=\"text\"\n                              onChange={(event) => onBoxPrefixChanged(event, oneBox)}\n                              value={oneBox.prefix}\n                            />\n                          </Field>\n                          <Field label=\"Suffix\">\n                            <Input\n                              type=\"text\"\n                              onChange={(event) => onBoxSuffixChanged(event, oneBox)}\n                              value={oneBox.suffix}\n                            />\n                          </Field>\n                        </HorizontalGroup>\n                        <HorizontalGroup>\n                          {oneBox.prefix ? (\n                            <>\n                              <Field label=\"Prefix size\">\n                                <Input\n                                  type=\"number\"\n                                  onChange={(event) => onBoxPrefixFontSizeChanged(event, oneBox)}\n                                  value={oneBox.prefixSize}\n                                />\n                              </Field>\n                            </>\n                          ) : null}\n                          {oneBox.suffix ? (\n                            <>\n                              <Field label=\"Suffix size\">\n                                <Input\n                                  type=\"number\"\n                                  onChange={(event) => onBoxSuffixFontSizeChanged(event, oneBox)}\n                                  value={oneBox.suffixSize}\n                                />\n                              </Field>\n                            </>\n                          ) : null}\n                        </HorizontalGroup>\n                      </div>\n                      <div className=\"section gf-form-group\">\n                        <h5 className=\"section-heading\">Position and Link</h5>\n                        <Tooltip\n                          theme=\"info\"\n                          content={\n                            <p>\n                              You can easily find the coordinates if you <code>ctrl</code>+<code>left click</code>\n                              anywhere on your image\n                            </p>\n                          }\n                        >\n                          <Icon name=\"info-circle\" />\n                        </Tooltip>\n                        <HorizontalGroup>\n                          <Field label=\"X\">\n                            <Input\n                              type=\"number\"\n                              onChange={(event) => onBoxXposChanged(event, oneBox)}\n                              value={oneBox.xpos}\n                            />\n                          </Field>\n                          <Field label=\"Y\">\n                            <Input\n                              type=\"number\"\n                              onChange={(event) => onBoxYposChanged(event, oneBox)}\n                              value={oneBox.ypos}\n                            />\n                          </Field>\n                        </HorizontalGroup>\n                        <HorizontalGroup>\n                          <Field label=\"Angle\">\n                            <Input\n                              type=\"number\"\n                              onChange={(event) => onBoxAngleChanged(event, oneBox)}\n                              value={oneBox.angle}\n                            />\n                          </Field>\n                          <Field label=\"Link\">\n                            <Input\n                              type=\"text\"\n                              onChange={(event) => onBoxUrlChanged(event, oneBox)}\n                              value={oneBox.url}\n                            />\n                          </Field>\n                        </HorizontalGroup>\n                      </div>\n                      <div className=\"section gf-form-group\">\n                        <h5 className=\"section-heading\">Symbol Library</h5>\n                        <HorizontalGroup>\n                          <div className=\"width-12\">\n                            <Field label=\"Symbol\">\n                              <Select\n                                options={SymbolsLibrary}\n                                onChange={(v) => onBoxSymbolChanged(v, oneBox)}\n                                value={oneBox.symbol}\n                              />\n                            </Field>\n                          </div>\n                          {oneBox.symbol !== '' && oneBox.symbol !== 'custom' && oneBox.symbol !== 'text' ? (\n                            <img\n                              srcSet={getTemplateSrv().replace(oneBox.symbol)}\n                              width={oneBox.symbolDefWidth}\n                              height={oneBox.symbolDefHeight}\n                            />\n                          ) : null}\n                        </HorizontalGroup>\n                        {oneBox.symbol === 'custom' ? (\n                          <>\n                            <HorizontalGroup>\n                              <Field label=\"Custom symbol url\">\n                                <Input\n                                  type=\"text\"\n                                  onChange={(event) => onBoxCustomSymbolChanged(event, oneBox)}\n                                  value={oneBox.customSymbol}\n                                />\n                              </Field>\n                            </HorizontalGroup>\n                          </>\n                        ) : null}\n                        {oneBox.symbol === 'text' ? (\n                          <>\n                            <HorizontalGroup>\n                              <Field label=\"Static text\">\n                                <Input\n                                  type=\"text\"\n                                  onChange={(event) => onBoxCustomSymbolChanged(event, oneBox)}\n                                  value={oneBox.customSymbol}\n                                />\n                              </Field>\n                            </HorizontalGroup>\n                          </>\n                        ) : null}\n                        {oneBox.symbol !== '' ? (\n                          <>\n                            <HorizontalGroup>\n                              <Field label=\"Symbol width\">\n                                <Input\n                                  type=\"number\"\n                                  onChange={(event) => onBoxSymbolWidthChanged(event, oneBox)}\n                                  value={oneBox.symbolWidth}\n                                />\n                              </Field>\n                              <Field label=\"Symbol height\">\n                                <Input\n                                  type=\"number\"\n                                  onChange={(event) => onBoxSymbolHeightChanged(event, oneBox)}\n                                  value={oneBox.symbolHeight}\n                                />\n                              </Field>\n                            </HorizontalGroup>\n                          </>\n                        ) : null}\n                        <HorizontalGroup>\n                          <div className=\"width-8\">\n                            <Field label=\"Only show symbol\">\n                              <Switch\n                                value={oneBox.onlyShowSymbol}\n                                checked={oneBox.onlyShowSymbol}\n                                onChange={(event) => onBoxOnlySymbolChanged(event, oneBox)}\n                              />\n                            </Field>\n                          </div>\n                          <div className=\"width-8\">\n                            <Field label=\"Colorize symbol\">\n                              <Switch\n                                value={oneBox.colorSymbol}\n                                checked={oneBox.colorSymbol}\n                                onChange={(event) => onBoxColorSymbolChanged(event, oneBox)}\n                              />\n                            </Field>\n                          </div>\n                        </HorizontalGroup>\n                      </div>\n                      <div className=\"section gf-form-group\">\n                        <h5 className=\"section-heading\">Appearance</h5>\n                        <HorizontalGroup>\n                          <Field label=\"Decimal\">\n                            <Input\n                              type=\"number\"\n                              onChange={(event) => onBoxDecimalChanged(event, oneBox)}\n                              value={oneBox.decimal}\n                            />\n                          </Field>\n                          <Field label=\"Font-size\">\n                            <Input\n                              type=\"number\"\n                              onChange={(event) => onBoxFontsizeChanged(event, oneBox)}\n                              value={oneBox.fontSize}\n                            />\n                          </Field>\n                        </HorizontalGroup>\n                        <HorizontalGroup>\n                          <div className=\"width-5\">\n                            <Field label=\"Show Orb\">\n                              <Switch\n                                value={oneBox.hasOrb}\n                                checked={oneBox.hasOrb}\n                                onChange={(event) => onBoxOrbChanged(event, oneBox)}\n                              />\n                            </Field>\n                          </div>\n                          {oneBox.hasOrb ? (\n                            <>\n                              <div className=\"width-6\">\n                                <Field label=\"Hide text\">\n                                  <Switch\n                                    checked={oneBox.orbHideText}\n                                    onChange={(event) => onBoxOrbHideTextChanged(event, oneBox)}\n                                  />\n                                </Field>\n                              </div>\n                              {!oneBox.orbHideText ? (\n                                <>\n                                  <div className=\"width-12\">\n                                    <Field label=\"Orb Location\">\n                                      <Select\n                                        options={orbLocations}\n                                        onChange={(v) => onBoxOrbLocationChanged(v, oneBox)}\n                                        value={oneBox.orbLocation}\n                                      />\n                                    </Field>\n                                  </div>\n                                </>\n                              ) : null}\n                              <div>\n                                <Field label=\"Orb Size\">\n                                  <Input\n                                    type=\"number\"\n                                    value={oneBox.orbSize}\n                                    onChange={(event) => onBoxOrbSizeChanged(event, oneBox)}\n                                  />\n                                </Field>\n                              </div>\n                            </>\n                          ) : null}\n                        </HorizontalGroup>\n                        <HorizontalGroup>\n                          <Field label=\"Use Thresholds\">\n                            <Switch\n                              onChange={(event) => onBoxUseThresholdsChanged(event, oneBox)}\n                              value={oneBox.isUsingThresholds}\n                            />\n                          </Field>\n                          {oneBox.isUsingThresholds ? (\n                            <>\n                              <Tooltip\n                                content={\n                                  <p>\n                                    Enter 2 comma-separated numbers. 20,60 will produce: <code>value &lt;= 20</code>\n                                    -&gt; green <br />\n                                    <code>value between 20 and 60</code> -&gt; yellow <br />\n                                    <code>value &gt;= 60</code> -&gt; red{' '}\n                                  </p>\n                                }\n                              >\n                                <Icon name=\"info-circle\" />\n                              </Tooltip>\n                              <Field label=\"Thresholds\">\n                                <Input\n                                  type=\"text\"\n                                  onChange={(event) => onBoxThresholdsChanged(event, oneBox)}\n                                  value={oneBox.thresholds}\n                                />\n                              </Field>\n                              <HorizontalGroup>\n                                <ColorPicker\n                                  color={oneBox.colorLow}\n                                  onChange={(color) => onBoxColorLowChanged(color, oneBox)}\n                                />\n                                <ColorPicker\n                                  color={oneBox.colorMedium}\n                                  onChange={(color) => onBoxColorMediumChanged(color, oneBox)}\n                                />\n                                <ColorPicker\n                                  color={oneBox.colorHigh}\n                                  onChange={(color) => onBoxColorHighChanged(color, oneBox)}\n                                />\n                              </HorizontalGroup>\n                            </>\n                          ) : (\n                            <Field label=\"Color\">\n                              <ColorPicker\n                                color={oneBox.color}\n                                onChange={(color) => onBoxColorChanged(color, oneBox)}\n                              />\n                            </Field>\n                          )}\n                        </HorizontalGroup>\n                        {oneBox.isUsingThresholds ? (\n                          <HorizontalGroup>\n                            <Field label=\"Blink if low\">\n                              <Switch\n                                onChange={(event) => onBoxBlinkLowChanged(event, oneBox)}\n                                value={oneBox.blinkLow}\n                              />\n                            </Field>\n                            <Field label=\"Blink if high\">\n                              <Switch\n                                onChange={(event) => onBoxBlinkHighChanged(event, oneBox)}\n                                value={oneBox.blinkHigh}\n                              />\n                            </Field>\n                          </HorizontalGroup>\n                        ) : null}\n                        {/* <HorizontalGroup>\n                          <Field label=\"Show the background\">\n                            <Switch\n                              onChange={event => onBoxHasBackgroundChanged(event, oneBox)}\n                              value={oneBox.hasBackground}\n                            />\n                          </Field>\n                          {oneBox.hasBackground ? (\n                            <HorizontalGroup>\n                              <Field label=\"Color\">\n                                <ColorPicker\n                                  color={oneBox.backgroundColor}\n                                  onChange={color => onBoxBackgroundColorChanged(color, oneBox)}\n                                />\n                              </Field>\n                            </HorizontalGroup>\n                          ) : null}\n                        </HorizontalGroup> */}\n                      </div>\n                      <hr />\n                    </div>\n                  ) : null}\n                </div>\n              ))}\n            </div>\n          );\n        },\n      })\n      .addCustomEditor({\n        path: 'boxes',\n        name: 'Boxes definitions',\n        id: 'boxesDefinitions',\n        defaultValue: null,\n        editor: (props) => {\n          var ctx = (props as any).context;\n          var data = ctx.data;\n          var options = ctx.options as SimpleOptions;\n          if (options.boxes == null) {\n            options.boxes = [];\n          }\n          const onAddBoxBtnClicked = ({ target }: any) => {\n            if (options.boxes == null) {\n              options.boxes = [];\n            }\n            options.boxes.push({\n              angle: 0,\n              color: '#fff',\n              colorHigh: '#f00',\n              colorLow: '#0f0',\n              colorMedium: '#fa1',\n              decimal: 0,\n              fontSize: 12,\n              hasOrb: false,\n              hasBackground: false,\n              backgroundColor: '#5794F2',\n              orbHideText: false,\n              orbLocation: 'Left',\n              orbSize: 10,\n              prefixSize: 10,\n              serie: 'A-Serie',\n              suffixSize: 10,\n              text: 'N/A',\n              suffix: '',\n              prefix: '',\n              thresholds: '',\n              blinkHigh: true,\n              blinkLow: false,\n              isUsingThresholds: false,\n              xpos: 0,\n              ypos: 0,\n              url: '',\n              onlyShowSymbol: false,\n              symbol: '',\n              symbolWidth: 32,\n              symbolHeight: 32,\n              symbolDefHeight: 32,\n              symbolDefWidth: 32,\n              colorSymbol: false,\n              customSymbol: '',\n              selected: false,\n            });\n            props.onChange(options.boxes);\n          };\n          const onDeleteBox = ({ target }: any, index: number) => {\n            delete options.boxes[index];\n            options.boxes.splice(index, 1);\n            props.onChange(options.boxes);\n          };\n          const onCloneBox = ({ target }: any, box: Box) => {\n            options.boxes.push({ ...box });\n            props.onChange(options.boxes);\n          };\n          const onBoxSerieUpdated = (value: any, box: Box) => {\n            box.serie = value;\n            props.onChange(options.boxes);\n          };\n          const onBoxPrefixChanged = ({ target }: any, box: Box) => {\n            box.prefix = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxPrefixFontSizeChanged = ({ target }: any, box: Box) => {\n            box.prefixSize = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxSuffixChanged = ({ target }: any, box: Box) => {\n            box.suffix = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxSuffixFontSizeChanged = ({ target }: any, box: Box) => {\n            box.suffixSize = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxXposChanged = ({ target }: any, box: Box) => {\n            box.xpos = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxYposChanged = ({ target }: any, box: Box) => {\n            box.ypos = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxAngleChanged = ({ target }: any, box: Box) => {\n            box.angle = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxUrlChanged = ({ target }: any, box: Box) => {\n            box.url = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxDecimalChanged = ({ target }: any, box: Box) => {\n            box.decimal = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxFontsizeChanged = ({ target }: any, box: Box) => {\n            box.fontSize = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxOrbChanged = ({ target }: any, box: Box) => {\n            box.hasOrb = target.checked;\n            props.onChange(options.boxes);\n          };\n          const onBoxOrbHideTextChanged = ({ target }: any, box: Box) => {\n            box.orbHideText = target.checked;\n            props.onChange(options.boxes);\n          };\n          const onBoxOrbLocationChanged = (location: any, box: Box) => {\n            box.orbLocation = location.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxOnlySymbolChanged = ({ target }: any, box: Box) => {\n            box.onlyShowSymbol = target.checked;\n            props.onChange(options.boxes);\n          };\n          const onBoxColorSymbolChanged = ({ target }: any, box: Box) => {\n            box.colorSymbol = target.checked;\n            props.onChange(options.boxes);\n          };\n          const onBoxSymbolChanged = (symbol: any, box: Box) => {\n            box.symbol = symbol.value;\n            box.symbolDefWidth = symbol.width;\n            box.symbolWidth = symbol.width * symbol.factor;\n            box.symbolDefHeight = symbol.height;\n            box.symbolHeight = symbol.height * symbol.factor;\n            props.onChange(options.boxes);\n          };\n          const onBoxSymbolWidthChanged = ({ target }: any, box: Box) => {\n            box.symbolWidth = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxSymbolHeightChanged = ({ target }: any, box: Box) => {\n            box.symbolHeight = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxCustomSymbolChanged = ({ target }: any, box: Box) => {\n            box.customSymbol = target.value;\n            props.onChange(options.boxes);\n          };\n          // const onBoxHasBackgroundChanged = ({ target }: any, box: Box) => {\n          //   box.hasBackground = target.checked;\n          //   props.onChange(options.boxes);\n          // };\n          // const onBoxBackgroundColorChanged = (color: string, box: Box) => {\n          //   box.backgroundColor = color;\n          //   props.onChange(options.boxes);\n          // };\n          const onBoxUseThresholdsChanged = ({ target }: any, box: Box) => {\n            box.isUsingThresholds = target.checked;\n            props.onChange(options.boxes);\n          };\n          const onBoxThresholdsChanged = ({ target }: any, box: Box) => {\n            box.thresholds = target.value;\n            props.onChange(options.boxes);\n          };\n          const onBoxColorChanged = (color: string, box: Box) => {\n            box.color = color;\n            props.onChange(options.boxes);\n          };\n          const onBoxColorLowChanged = (color: string, box: Box) => {\n            box.colorLow = color;\n            props.onChange(options.boxes);\n          };\n          const onBoxColorMediumChanged = (color: string, box: Box) => {\n            box.colorMedium = color;\n            props.onChange(options.boxes);\n          };\n          const onBoxColorHighChanged = (color: string, box: Box) => {\n            box.colorHigh = color;\n            props.onChange(options.boxes);\n          };\n          const onBoxBlinkHighChanged = ({ target }: any, box: Box) => {\n            box.blinkHigh = target.checked;\n            props.onChange(options.boxes);\n          };\n          const onBoxBlinkLowChanged = ({ target }: any, box: Box) => {\n            box.blinkLow = target.checked;\n            props.onChange(options.boxes);\n          };\n          const onBoxOrbSizeChanged = ({ target }: any, box: Box) => {\n            box.orbSize = target.value;\n            props.onChange(options.boxes);\n          };\n          const orbLocations = [\n            { label: 'Top', value: 'Top' },\n            { label: 'Bottom', value: 'Bottom' },\n            { label: 'Left', value: 'Left' },\n            { label: 'Right', value: 'Right' },\n          ];\n\n          let availableSeries: Array<{ value: string; label: string }> = [];\n          data.forEach((frm: DataFrame) => {\n            let valuesFields = frm.fields.filter((f) => f.type === FieldType.number);\n            valuesFields.forEach((oneValField) => {\n              if (oneValField !== undefined) {\n                const fieldDisplayName = getFieldDisplayName(oneValField, frm);\n                let discoveredField =\n                  frm.name === undefined || frm.name === fieldDisplayName\n                    ? fieldDisplayName\n                    : `${frm.name} (${fieldDisplayName})`;\n                availableSeries.push({ value: discoveredField, label: discoveredField });\n              }\n            });\n          });\n\n          return (\n            <div className=\"section gf-form-group\">\n              {options.boxes.map((oneBox, index) => (\n                <div key={index}>\n                  <h5>Box #{index}</h5>\n                  <div className=\"section gf-form-group\">\n                    <HorizontalGroup>\n                      <IconButton\n                        name=\"trash-alt\"\n                        size=\"xl\"\n                        surface=\"panel\"\n                        onClick={(event) => onDeleteBox(event, index)}\n                      />\n                      <IconButton\n                        name=\"copy\"\n                        size=\"xl\"\n                        surface=\"panel\"\n                        onClick={(event) => onCloneBox(event, oneBox)}\n                      />\n                    </HorizontalGroup>\n                  </div>\n                  <div className=\"section gf-form-group\">\n                    <h5 className=\"section-heading\">Metric</h5>\n                    <HorizontalGroup>\n                      <Field label=\"Name\">\n                        <Input type=\"text\" readOnly={true} value={oneBox.serie} width={16} />\n                      </Field>\n                      <ValuePicker\n                        label=\"Change Metric\"\n                        icon=\"exchange-alt\"\n                        options={availableSeries}\n                        onChange={(selectedItem) => onBoxSerieUpdated(selectedItem.value, oneBox)}\n                        variant=\"secondary\"\n                        size=\"sm\"\n                      />\n                      <Field label=\"Prefix\">\n                        <Input\n                          type=\"text\"\n                          onChange={(event) => onBoxPrefixChanged(event, oneBox)}\n                          value={oneBox.prefix}\n                        />\n                      </Field>\n                      <Field label=\"Suffix\">\n                        <Input\n                          type=\"text\"\n                          onChange={(event) => onBoxSuffixChanged(event, oneBox)}\n                          value={oneBox.suffix}\n                        />\n                      </Field>\n                    </HorizontalGroup>\n                    <HorizontalGroup>\n                      {oneBox.prefix ? (\n                        <>\n                          <Field label=\"Prefix size\">\n                            <Input\n                              type=\"number\"\n                              onChange={(event) => onBoxPrefixFontSizeChanged(event, oneBox)}\n                              value={oneBox.prefixSize}\n                            />\n                          </Field>\n                        </>\n                      ) : null}\n                      {oneBox.suffix ? (\n                        <>\n                          <Field label=\"Suffix size\">\n                            <Input\n                              type=\"number\"\n                              onChange={(event) => onBoxSuffixFontSizeChanged(event, oneBox)}\n                              value={oneBox.suffixSize}\n                            />\n                          </Field>\n                        </>\n                      ) : null}\n                    </HorizontalGroup>\n                  </div>\n                  <div className=\"section gf-form-group\">\n                    <h5 className=\"section-heading\">Position and Link</h5>\n                    <Tooltip\n                      theme=\"info\"\n                      content={\n                        <p>\n                          You can easily find the coordinates if you <code>ctrl</code>+<code>left click</code>\n                          anywhere on your image\n                        </p>\n                      }\n                    >\n                      <Icon name=\"info-circle\" />\n                    </Tooltip>\n                    <HorizontalGroup>\n                      <Field label=\"X\">\n                        <Input\n                          type=\"number\"\n                          onChange={(event) => onBoxXposChanged(event, oneBox)}\n                          value={oneBox.xpos}\n                        />\n                      </Field>\n                      <Field label=\"Y\">\n                        <Input\n                          type=\"number\"\n                          onChange={(event) => onBoxYposChanged(event, oneBox)}\n                          value={oneBox.ypos}\n                        />\n                      </Field>\n                    </HorizontalGroup>\n                    <HorizontalGroup>\n                      <Field label=\"Angle\">\n                        <Input\n                          type=\"number\"\n                          onChange={(event) => onBoxAngleChanged(event, oneBox)}\n                          value={oneBox.angle}\n                        />\n                      </Field>\n                      <Field label=\"Link\">\n                        <Input type=\"text\" onChange={(event) => onBoxUrlChanged(event, oneBox)} value={oneBox.url} />\n                      </Field>\n                    </HorizontalGroup>\n                  </div>\n                  <div className=\"section gf-form-group\">\n                    <h5 className=\"section-heading\">Symbol Library</h5>\n                    <HorizontalGroup>\n                      <div className=\"width-12\">\n                        <Field label=\"Symbol\">\n                          <Select\n                            options={SymbolsLibrary}\n                            onChange={(v) => onBoxSymbolChanged(v, oneBox)}\n                            value={oneBox.symbol}\n                          />\n                        </Field>\n                      </div>\n                      {oneBox.symbol !== '' && oneBox.symbol !== 'custom' && oneBox.symbol !== 'text' ? (\n                        <img\n                          srcSet={getTemplateSrv().replace(oneBox.symbol)}\n                          width={oneBox.symbolDefWidth}\n                          height={oneBox.symbolDefHeight}\n                        />\n                      ) : null}\n                    </HorizontalGroup>\n                    {oneBox.symbol === 'custom' ? (\n                      <>\n                        <HorizontalGroup>\n                          <Field label=\"Custom symbol url\">\n                            <Input\n                              type=\"text\"\n                              onChange={(event) => onBoxCustomSymbolChanged(event, oneBox)}\n                              value={oneBox.customSymbol}\n                            />\n                          </Field>\n                        </HorizontalGroup>\n                      </>\n                    ) : null}\n                    {oneBox.symbol === 'text' ? (\n                      <>\n                        <HorizontalGroup>\n                          <Field label=\"Static text\">\n                            <Input\n                              type=\"text\"\n                              onChange={(event) => onBoxCustomSymbolChanged(event, oneBox)}\n                              value={oneBox.customSymbol}\n                            />\n                          </Field>\n                        </HorizontalGroup>\n                      </>\n                    ) : null}\n                    {oneBox.symbol !== '' ? (\n                      <>\n                        <HorizontalGroup>\n                          <Field label=\"Symbol width\">\n                            <Input\n                              type=\"number\"\n                              onChange={(event) => onBoxSymbolWidthChanged(event, oneBox)}\n                              value={oneBox.symbolWidth}\n                            />\n                          </Field>\n                          <Field label=\"Symbol height\">\n                            <Input\n                              type=\"number\"\n                              onChange={(event) => onBoxSymbolHeightChanged(event, oneBox)}\n                              value={oneBox.symbolHeight}\n                            />\n                          </Field>\n                        </HorizontalGroup>\n                      </>\n                    ) : null}\n                    <HorizontalGroup>\n                      <div className=\"width-8\">\n                        <Field label=\"Only show symbol\">\n                          <Switch\n                            value={oneBox.onlyShowSymbol}\n                            checked={oneBox.onlyShowSymbol}\n                            onChange={(event) => onBoxOnlySymbolChanged(event, oneBox)}\n                          />\n                        </Field>\n                      </div>\n                      <div className=\"width-8\">\n                        <Field label=\"Colorize symbol\">\n                          <Switch\n                            value={oneBox.colorSymbol}\n                            checked={oneBox.colorSymbol}\n                            onChange={(event) => onBoxColorSymbolChanged(event, oneBox)}\n                          />\n                        </Field>\n                      </div>\n                    </HorizontalGroup>\n                  </div>\n                  <div className=\"section gf-form-group\">\n                    <h5 className=\"section-heading\">Appearance</h5>\n                    <HorizontalGroup>\n                      <Field label=\"Decimal\">\n                        <Input\n                          type=\"number\"\n                          onChange={(event) => onBoxDecimalChanged(event, oneBox)}\n                          value={oneBox.decimal}\n                        />\n                      </Field>\n                      <Field label=\"Font-size\">\n                        <Input\n                          type=\"number\"\n                          onChange={(event) => onBoxFontsizeChanged(event, oneBox)}\n                          value={oneBox.fontSize}\n                        />\n                      </Field>\n                    </HorizontalGroup>\n                    <HorizontalGroup>\n                      <div className=\"width-5\">\n                        <Field label=\"Show Orb\">\n                          <Switch\n                            value={oneBox.hasOrb}\n                            checked={oneBox.hasOrb}\n                            onChange={(event) => onBoxOrbChanged(event, oneBox)}\n                          />\n                        </Field>\n                      </div>\n                      {oneBox.hasOrb ? (\n                        <>\n                          <div className=\"width-6\">\n                            <Field label=\"Hide text\">\n                              <Switch\n                                checked={oneBox.orbHideText}\n                                onChange={(event) => onBoxOrbHideTextChanged(event, oneBox)}\n                              />\n                            </Field>\n                          </div>\n                          {!oneBox.orbHideText ? (\n                            <>\n                              <div className=\"width-12\">\n                                <Field label=\"Orb Location\">\n                                  <Select\n                                    options={orbLocations}\n                                    onChange={(v) => onBoxOrbLocationChanged(v, oneBox)}\n                                    value={oneBox.orbLocation}\n                                  />\n                                </Field>\n                              </div>\n                            </>\n                          ) : null}\n                          <div>\n                            <Field label=\"Orb Size\">\n                              <Input\n                                type=\"number\"\n                                value={oneBox.orbSize}\n                                onChange={(event) => onBoxOrbSizeChanged(event, oneBox)}\n                              />\n                            </Field>\n                          </div>\n                        </>\n                      ) : null}\n                    </HorizontalGroup>\n                    <HorizontalGroup>\n                      <Field label=\"Use Thresholds\">\n                        <Switch\n                          onChange={(event) => onBoxUseThresholdsChanged(event, oneBox)}\n                          value={oneBox.isUsingThresholds}\n                        />\n                      </Field>\n                      {oneBox.isUsingThresholds ? (\n                        <>\n                          <Tooltip\n                            content={\n                              <p>\n                                Enter 2 comma-separated numbers. 20,60 will produce: <code>value &lt;= 20</code> -&gt;\n                                green <br />\n                                <code>value between 20 and 60</code> -&gt; yellow <br />\n                                <code>value &gt;= 60</code> -&gt; red{' '}\n                              </p>\n                            }\n                          >\n                            <Icon name=\"info-circle\" />\n                          </Tooltip>\n                          <Field label=\"Thresholds\">\n                            <Input\n                              type=\"text\"\n                              onChange={(event) => onBoxThresholdsChanged(event, oneBox)}\n                              value={oneBox.thresholds}\n                            />\n                          </Field>\n                          <HorizontalGroup>\n                            <ColorPicker\n                              color={oneBox.colorLow}\n                              onChange={(color) => onBoxColorLowChanged(color, oneBox)}\n                            />\n\n                            <ColorPicker\n                              color={oneBox.colorMedium}\n                              onChange={(color) => onBoxColorMediumChanged(color, oneBox)}\n                            />\n\n                            <ColorPicker\n                              color={oneBox.colorHigh}\n                              onChange={(color) => onBoxColorHighChanged(color, oneBox)}\n                            />\n                          </HorizontalGroup>\n                        </>\n                      ) : (\n                        <Field label=\"Color\">\n                          <ColorPicker color={oneBox.color} onChange={(color) => onBoxColorChanged(color, oneBox)} />\n                        </Field>\n                      )}\n                    </HorizontalGroup>\n                    {oneBox.isUsingThresholds ? (\n                      <HorizontalGroup>\n                        <Field label=\"Blink if low\">\n                          <Switch onChange={(event) => onBoxBlinkLowChanged(event, oneBox)} value={oneBox.blinkLow} />\n                        </Field>\n                        <Field label=\"Blink if high\">\n                          <Switch onChange={(event) => onBoxBlinkHighChanged(event, oneBox)} value={oneBox.blinkHigh} />\n                        </Field>\n                      </HorizontalGroup>\n                    ) : null}\n                    {/* <HorizontalGroup>\n                      <Field label=\"Show the background\">\n                        <Switch\n                          onChange={event => onBoxHasBackgroundChanged(event, oneBox)}\n                          value={oneBox.hasBackground}\n                        />\n                      </Field>\n                      {oneBox.hasBackground ? (\n                        <HorizontalGroup>\n                          <Field label=\"Color\">\n                            <ColorPicker\n                              color={oneBox.backgroundColor}\n                              onChange={color => onBoxBackgroundColorChanged(color, oneBox)}\n                            />\n                          </Field>\n                        </HorizontalGroup>\n                      ) : null}\n                    </HorizontalGroup> */}\n                  </div>\n                  <hr />\n                </div>\n              ))}\n              <Button variant=\"primary\" size=\"md\" icon=\"plus\" onClick={onAddBoxBtnClicked}>\n                Add a box\n              </Button>\n            </div>\n          );\n        },\n      });\n  })\n  .setMigrationHandler(MigHandler);\n"],"sourceRoot":""}