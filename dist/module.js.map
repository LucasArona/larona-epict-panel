{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@grafana/ui\"","webpack:///external \"emotion\"","webpack:///external \"tslib\"","webpack:///external \"@grafana/data\"","webpack:///external \"@grafana/runtime\"","webpack:///./Utilities.tsx","webpack:///./EpictPanel.tsx","webpack:///./MigHandler.tsx","webpack:///./module.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","getLastNotNullValue","fields","decimals","retVal","lastNotNullValueIndex","values","length","toFixed","toString","onBgClick","event","ctrlKey","alert","nativeEvent","offsetX","offsetY","getStyles","wrapper","imgWrapper","box","boxLink","orbDefaults","blink","alignVertically","boxPrefix","boxSuffix","options","data","processedBgURL","replace","bgURL","boxes","styles","className","id","srcSet","onClick","map","oneBox","index","ypos","xpos","getBoxColor","angle","href","url","hasOrb","orbHideText","orbLocation","isBoxBlinking","orbSize","title","getBoxTitleText","fontSize","prefix","prefixSize","getBoxText","suffix","suffixSize","isUsingThresholds","thresholds","blinkHigh","blinkLow","lowThreshold","split","highThreshold","colorHigh","colorLow","colorMedium","color","concat","getBoxValue","serie","decimal","serieName","undefined","series","every","frm","targetField","filter","f","type","find","fieldDisplayName","getLastNotNullStringValue","setPanelOptions","builder","addTextInput","path","addCustomEditor","defaultValue","editor","props","ctx","context","orbLocations","label","availableSeries","forEach","oneValField","discoveredField","push","size","surface","splice","onChange","onDeleteBox","onCloneBox","readOnly","width","icon","selectedItem","variant","target","theme","content","checked","v","location","onBoxColorLowChanged","onBoxColorMediumChanged","onBoxColorHighChanged","onBoxColorChanged","hasBackground","backgroundColor","text","setMigrationHandler","panel","pluginVersion","Opts","oldBox","fontsize","usingThresholds","URL"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","import { Field, Vector } from '@grafana/data';\n\nexport function getLastNotNullValue(fields: Field<any, Vector<any>> | undefined, decimals: number) {\n  let retVal = 'N/A';\n  let lastNotNullValueIndex = fields?.values.length;\n  if (lastNotNullValueIndex) {\n    while (lastNotNullValueIndex-- && fields?.values.get(lastNotNullValueIndex) == null) {} //Find the last non-null value\n    if (lastNotNullValueIndex !== -1) {\n      // If we only have null values, index = -1\n      retVal = fields?.values.get(lastNotNullValueIndex).toFixed(decimals).toString();\n    }\n  }\n  return retVal;\n}\n\nexport function getLastNotNullStringValue(fields: Field<any, Vector<any>> | undefined) {\n  let retVal = 'N/A';\n  let lastNotNullValueIndex = fields?.values.length;\n  if (lastNotNullValueIndex) {\n    while (lastNotNullValueIndex-- && fields?.values.get(lastNotNullValueIndex) == null) {} //Find the last non-null value\n    if (lastNotNullValueIndex !== -1) {\n      // If we only have null values, index = -1\n      retVal = fields?.values.get(lastNotNullValueIndex).toString();\n    }\n  }\n  return retVal;\n}\n","import React from 'react';\nimport { DataFrame, FieldType, getFieldDisplayName, PanelProps } from '@grafana/data';\nimport { SimpleOptions, Box } from 'types';\nimport { css, cx } from 'emotion';\nimport { stylesFactory } from '@grafana/ui';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { getLastNotNullStringValue, getLastNotNullValue } from './Utilities';\n\ninterface Props extends PanelProps<SimpleOptions> {}\nexport const SimplePanel: React.FC<Props> = ({ options, data, width, height }) => {\n  let processedBgURL = getTemplateSrv().replace(options.bgURL);\n  let boxes = options.boxes;\n  const styles = getStyles();\n  return (\n    <div className={cx(styles.wrapper)}>\n      <div className={cx(styles.imgWrapper)} id=\"img-wrapper\">\n        <img srcSet={processedBgURL} onClick={(event) => onBgClick(event)} />\n        {boxes.map((oneBox, index) => (\n          <span\n            key={index}\n            className={cx(\n              styles.box,\n              css`\n                top: ${oneBox.ypos}px;\n                left: ${oneBox.xpos}px;\n                color: ${getBoxColor(oneBox)};\n                transform: rotate(${oneBox.angle}deg);\n              `\n            )}\n          >\n            <a\n              href={oneBox.url ? getTemplateSrv().replace(oneBox.url) : '#'}\n              className={cx(\n                styles.boxLink,\n                oneBox.url\n                  ? css`\n                      cursor: pointer;\n                    `\n                  : css`\n                      cursor: default;\n                    `\n              )}\n            >\n              {(oneBox.hasOrb && oneBox.orbHideText) ||\n              (oneBox.hasOrb && !oneBox.orbHideText && oneBox.orbLocation === 'Top') ? (\n                <span\n                  className={cx(\n                    isBoxBlinking(oneBox) ? styles.blink : '',\n                    styles.orbDefaults,\n                    css`\n                      height: ${oneBox.orbSize}px;\n                      width: ${oneBox.orbSize}px;\n                      background-color: ${getBoxColor(oneBox)};\n                    `\n                  )}\n                  title={getBoxTitleText(oneBox)}\n                ></span>\n              ) : null}\n              {!oneBox.hasOrb || !oneBox.orbHideText ? (\n                <div\n                  className={cx(\n                    css`\n                      font-size: ${oneBox.fontSize}px;\n                      line-heigh: normal;\n                    `\n                  )}\n                >\n                  {oneBox.hasOrb && oneBox.orbLocation === 'Left' ? (\n                    <span\n                      className={cx(\n                        isBoxBlinking(oneBox) ? styles.blink : '',\n                        styles.orbDefaults,\n                        styles.alignVertically,\n                        css`\n                          height: ${oneBox.orbSize}px;\n                          width: ${oneBox.orbSize}px;\n                          background-color: ${getBoxColor(oneBox)};\n                        `\n                      )}\n                      title={getBoxTitleText(oneBox)}\n                    ></span>\n                  ) : null}\n\n                  {oneBox.prefix ? (\n                    <span\n                      className={cx(\n                        styles.alignVertically,\n                        styles.boxPrefix,\n                        css`\n                          font-size: ${oneBox.prefixSize}px;\n                        `\n                      )}\n                      title={getBoxTitleText(oneBox)}\n                    >\n                      {oneBox.prefix}\n                    </span>\n                  ) : null}\n\n                  <span className={cx(isBoxBlinking(oneBox) ? styles.blink : '', styles.alignVertically)}>\n                    {getBoxText(oneBox)}\n                  </span>\n\n                  {oneBox.suffix ? (\n                    <span\n                      className={cx(\n                        isBoxBlinking(oneBox) ? styles.blink : '',\n                        styles.alignVertically,\n                        styles.boxSuffix,\n                        css`\n                          font-size: ${oneBox.suffixSize}px;\n                        `\n                      )}\n                      title={getBoxTitleText(oneBox)}\n                    >\n                      {oneBox.suffix}\n                    </span>\n                  ) : null}\n\n                  {oneBox.hasOrb && oneBox.orbLocation === 'Right' ? (\n                    <span\n                      className={cx(\n                        isBoxBlinking(oneBox) ? styles.blink : '',\n                        styles.orbDefaults,\n                        styles.alignVertically,\n                        css`\n                          height: ${oneBox.orbSize}px;\n                          width: ${oneBox.orbSize}px;\n                          background-color: ${getBoxColor(oneBox)};\n                        `\n                      )}\n                      title={getBoxTitleText(oneBox)}\n                    ></span>\n                  ) : null}\n                </div>\n              ) : null}\n              {oneBox.hasOrb && !oneBox.orbHideText && oneBox.orbLocation === 'Bottom' ? (\n                <span\n                  className={cx(\n                    isBoxBlinking(oneBox) ? styles.blink : '',\n                    styles.orbDefaults,\n                    css`\n                      height: ${oneBox.orbSize}px;\n                      width: ${oneBox.orbSize}px;\n                      background-color: ${getBoxColor(oneBox)};\n                    `\n                  )}\n                  title={getBoxTitleText(oneBox)}\n                ></span>\n              ) : null}\n            </a>\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n\n  function isBoxBlinking(box: Box): boolean {\n    if (box.isUsingThresholds && box.thresholds && (box.blinkHigh || box.blinkLow)) {\n      const value = getBoxText(box);\n      const lowThreshold = +box.thresholds.split(',')[0];\n      const highThreshold = +box.thresholds.split(',')[1];\n      if (box.blinkHigh && +value >= highThreshold) {\n        return true;\n      } else if (box.blinkLow && +value <= lowThreshold) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function getBoxColor(box: Box): string {\n    const value = getBoxText(box);\n    if (box.isUsingThresholds && box.thresholds) {\n      const lowThreshold = +box.thresholds.split(',')[0];\n      const highThreshold = +box.thresholds.split(',')[1];\n      if (+value >= highThreshold) {\n        return box.colorHigh;\n      } else if (+value <= lowThreshold) {\n        return box.colorLow;\n      } else {\n        return box.colorMedium;\n      }\n    }\n    return box.color;\n  }\n\n  function getBoxTitleText(box: Box): string {\n    return box.prefix ?? ''.concat(getBoxValue(box.serie, 5)) ?? ''.concat(box.suffix);\n  }\n  function getBoxText(box: Box): string {\n    return getBoxValue(box.serie, box.decimal);\n  }\n\n  function getBoxValue(serieName: string, decimals: number): string {\n    let retVal = undefined;\n\n    let serie = undefined;\n\n    data.series.every((frm: DataFrame) => {\n      let numberFields = frm.fields.filter((f) => f.type === FieldType.number);\n      let targetField = numberFields.find(function (f) {\n        const fieldDisplayName = getFieldDisplayName(f, frm);\n        let discoveredField =\n          frm.name === undefined || frm.name === fieldDisplayName\n            ? fieldDisplayName\n            : `${frm.name} (${fieldDisplayName})`;\n        return discoveredField === serieName;\n      });\n      if (targetField !== undefined && targetField !== null) {\n        retVal = getLastNotNullValue(targetField, decimals);\n        return false; //We found what we were looking for, so stop iterating\n      }\n      return true; //Continue iterating\n    });\n\n    if (retVal === undefined) {\n      data.series.every((frm: DataFrame) => {\n        let targetField = frm.fields.find(function (f) {\n          const fieldDisplayName = getFieldDisplayName(f, frm);\n          let discoveredField =\n            frm.name === undefined || frm.name === fieldDisplayName\n              ? fieldDisplayName\n              : `${frm.name} (${fieldDisplayName})`;\n          return discoveredField === serieName;\n        });\n        if (targetField !== undefined && targetField !== null) {\n          retVal = getLastNotNullStringValue(targetField);\n          return false; //We found what we were looking for, so stop iterating\n        }\n        return true; //Continue iterating\n      });\n    }\n\n    if (retVal === undefined) {\n      serie = data.series.find((s) => s.name === serieName); /*for backward compatibility*/\n      let fields = serie?.fields.find((f) => f.type === 'number');\n      retVal = getLastNotNullValue(fields, decimals);\n    }\n\n    if (retVal === undefined) {\n      retVal = 'N/A';\n    }\n    return retVal;\n  }\n};\n\nlet onBgClick = (event: any) => {\n  if (event.ctrlKey) {\n    alert('X:' + event.nativeEvent.offsetX + ' Y:' + event.nativeEvent.offsetY);\n  }\n};\n\nconst getStyles = stylesFactory(() => {\n  return {\n    wrapper: css`\n      display: flex;\n      justify-content: center;\n    `,\n    imgWrapper: css`\n      position: relative;\n    `,\n    box: css`\n      position: absolute;\n    `,\n    boxLink: css`\n      display: inline-block;\n      text-align: center;\n      color: unset;\n      &:hover {\n        color: unset;\n      }\n      &:focus {\n        color: unset;\n      }\n    `,\n    orbDefaults: css`\n      border-radius: 50%;\n      border-style: solid;\n      border-width: thin;\n      border-color: #000;\n      display: inline-block;\n      font-size: 0px;\n    `,\n    blink: css`\n      animation: blink_anim 0.8s linear infinite;\n      @keyframes blink_anim {\n        50% {\n          opacity: 0.2;\n        }\n      }\n    `,\n    alignVertically: css`\n      display: inline-block;\n      white-space: normal;\n      vertical-align: middle;\n    `,\n    boxPrefix: css`\n      white-space: pre;\n      margin-right: 0.5ch;\n    `,\n    boxSuffix: css`\n      white-space: pre;\n      margin-right: 0.5ch;\n    `,\n  };\n});\n","import { PanelModel } from '@grafana/data';\nimport { SimpleOptions } from 'types';\n\nclass Opts implements SimpleOptions {\n  bgURL!: string;\n  boxes!: Array<import('./types').Box>;\n}\n\nexport const MigHandler = (panel: PanelModel<Partial<SimpleOptions>> | any): Partial<SimpleOptions> => {\n  if (panel.boxes != null && panel.pluginVersion == null) {\n    //We found boxes to upgrade from an old plugin\n    console.log('Migrating from an older version', panel);\n    const options: SimpleOptions = new Opts();\n    options.bgURL = panel.bgURL;\n    options.boxes = [];\n    panel.boxes.forEach((oldBox: any) => {\n      console.log('Found a box to upgrade:', oldBox);\n      options.boxes.push({\n        angle: oldBox.angle,\n        color: oldBox.color,\n        colorHigh: oldBox.colorHigh,\n        colorLow: oldBox.colorLow,\n        colorMedium: oldBox.colorMedium,\n        decimal: oldBox.decimal,\n        fontSize: oldBox.fontsize,\n        hasOrb: oldBox.hasOrb,\n        hasBackground: false,\n        backgroundColor: '#5794F2',\n        orbHideText: oldBox.orbHideText,\n        orbLocation: oldBox.orbLocation,\n        orbSize: oldBox.orbSize,\n        prefixSize: oldBox.prefixSize,\n        serie: oldBox.serie,\n        suffixSize: oldBox.suffixSize,\n        text: oldBox.text,\n        suffix: oldBox.suffix,\n        prefix: oldBox.prefix,\n        thresholds: oldBox.thresholds,\n        blinkHigh: oldBox.blinkHigh,\n        blinkLow: oldBox.blinkLow,\n        isUsingThresholds: oldBox.usingThresholds,\n        xpos: oldBox.xpos,\n        ypos: oldBox.ypos,\n        url: oldBox.URL,\n      });\n    });\n    return options;\n  } else {\n    //Nothing to do\n    console.log('MigHandler: Nothing to upgrade');\n    return panel.options;\n  }\n};\n","import { DataFrame, FieldType, getFieldDisplayName, PanelPlugin } from '@grafana/data';\nimport { Box, SimpleOptions } from './types';\nimport { SimplePanel as EpictPanel } from './EpictPanel';\nimport { MigHandler } from 'MigHandler';\nimport React from 'react';\nimport {\n  Button,\n  ColorPicker,\n  Field,\n  HorizontalGroup,\n  Icon,\n  IconButton,\n  Input,\n  Select,\n  Switch,\n  Tooltip,\n  ValuePicker,\n} from '@grafana/ui';\n\nexport const plugin = new PanelPlugin<SimpleOptions>(EpictPanel)\n  .setPanelOptions((builder) => {\n    builder.addTextInput({ name: 'Background URL', path: 'bgURL' }).addCustomEditor({\n      path: 'boxes',\n      name: 'Boxes definitions',\n      id: 'boxesDefinitions',\n      defaultValue: null,\n      editor: (props) => {\n        var ctx = (props as any).context;\n        var data = ctx.data;\n        var options = ctx.options as SimpleOptions;\n        if (options.boxes == null) {\n          options.boxes = [];\n        }\n        const onAddBoxBtnClicked = ({ target }: any) => {\n          if (options.boxes == null) {\n            options.boxes = [];\n          }\n          options.boxes.push({\n            angle: 0,\n            color: '#fff',\n            colorHigh: '#f00',\n            colorLow: '#0f0',\n            colorMedium: '#fa1',\n            decimal: 0,\n            fontSize: 12,\n            hasOrb: false,\n            hasBackground: false,\n            backgroundColor: '#5794F2',\n            orbHideText: false,\n            orbLocation: 'Left',\n            orbSize: 10,\n            prefixSize: 10,\n            serie: 'A-Serie',\n            suffixSize: 10,\n            text: 'N/A',\n            suffix: '',\n            prefix: '',\n            thresholds: '',\n            blinkHigh: true,\n            blinkLow: false,\n            isUsingThresholds: false,\n            xpos: 0,\n            ypos: 0,\n            url: '',\n          });\n          props.onChange(options.boxes);\n        };\n        const onDeleteBox = ({ target }: any, index: number) => {\n          delete options.boxes[index];\n          options.boxes.splice(index, 1);\n          props.onChange(options.boxes);\n        };\n        const onCloneBox = ({ target }: any, box: Box) => {\n          options.boxes.push({ ...box });\n          props.onChange(options.boxes);\n        };\n        const onBoxSerieUpdated = (value: any, box: Box) => {\n          box.serie = value;\n          props.onChange(options.boxes);\n        };\n        const onBoxPrefixChanged = ({ target }: any, box: Box) => {\n          box.prefix = target.value;\n          props.onChange(options.boxes);\n        };\n        const onBoxPrefixFontSizeChanged = ({ target }: any, box: Box) => {\n          box.prefixSize = target.value;\n          props.onChange(options.boxes);\n        };\n        const onBoxSuffixChanged = ({ target }: any, box: Box) => {\n          box.suffix = target.value;\n          props.onChange(options.boxes);\n        };\n        const onBoxSuffixFontSizeChanged = ({ target }: any, box: Box) => {\n          box.suffixSize = target.value;\n          props.onChange(options.boxes);\n        };\n        const onBoxXposChanged = ({ target }: any, box: Box) => {\n          box.xpos = target.value;\n          props.onChange(options.boxes);\n        };\n        const onBoxYposChanged = ({ target }: any, box: Box) => {\n          box.ypos = target.value;\n          props.onChange(options.boxes);\n        };\n        const onBoxAngleChanged = ({ target }: any, box: Box) => {\n          box.angle = target.value;\n          props.onChange(options.boxes);\n        };\n        const onBoxUrlChanged = ({ target }: any, box: Box) => {\n          box.url = target.value;\n          props.onChange(options.boxes);\n        };\n        const onBoxDecimalChanged = ({ target }: any, box: Box) => {\n          box.decimal = target.value;\n          props.onChange(options.boxes);\n        };\n        const onBoxFontsizeChanged = ({ target }: any, box: Box) => {\n          box.fontSize = target.value;\n          props.onChange(options.boxes);\n        };\n        const onBoxOrbChanged = ({ target }: any, box: Box) => {\n          box.hasOrb = target.checked;\n          props.onChange(options.boxes);\n        };\n        const onBoxOrbHideTextChanged = ({ target }: any, box: Box) => {\n          box.orbHideText = target.checked;\n          props.onChange(options.boxes);\n        };\n        const onBoxOrbLocationChanged = (location: any, box: Box) => {\n          box.orbLocation = location.value;\n          props.onChange(options.boxes);\n        };\n        // const onBoxHasBackgroundChanged = ({ target }: any, box: Box) => {\n        //   box.hasBackground = target.checked;\n        //   props.onChange(options.boxes);\n        // };\n        // const onBoxBackgroundColorChanged = (color: string, box: Box) => {\n        //   box.backgroundColor = color;\n        //   props.onChange(options.boxes);\n        // };\n        const onBoxUseThresholdsChanged = ({ target }: any, box: Box) => {\n          box.isUsingThresholds = target.checked;\n          props.onChange(options.boxes);\n        };\n        const onBoxThresholdsChanged = ({ target }: any, box: Box) => {\n          box.thresholds = target.value;\n          props.onChange(options.boxes);\n        };\n        const onBoxColorChanged = (color: string, box: Box) => {\n          box.color = color;\n          props.onChange(options.boxes);\n        };\n        const onBoxColorLowChanged = (color: string, box: Box) => {\n          box.colorLow = color;\n          props.onChange(options.boxes);\n        };\n        const onBoxColorMediumChanged = (color: string, box: Box) => {\n          box.colorMedium = color;\n          props.onChange(options.boxes);\n        };\n        const onBoxColorHighChanged = (color: string, box: Box) => {\n          box.colorHigh = color;\n          props.onChange(options.boxes);\n        };\n        const onBoxBlinkHighChanged = ({ target }: any, box: Box) => {\n          box.blinkHigh = target.checked;\n          props.onChange(options.boxes);\n        };\n        const onBoxBlinkLowChanged = ({ target }: any, box: Box) => {\n          box.blinkLow = target.checked;\n          props.onChange(options.boxes);\n        };\n        const onBoxOrbSizeChanged = ({ target }: any, box: Box) => {\n          box.orbSize = target.value;\n          props.onChange(options.boxes);\n        };\n        const orbLocations = [\n          { label: 'Top', value: 'Top' },\n          { label: 'Bottom', value: 'Bottom' },\n          { label: 'Left', value: 'Left' },\n          { label: 'Right', value: 'Right' },\n        ];\n\n        let availableSeries: Array<{ value: string; label: string }> = [];\n        data.forEach((frm: DataFrame) => {\n          let valuesFields = frm.fields.filter((f) => f.type === FieldType.number);\n          valuesFields.forEach((oneValField) => {\n            if (oneValField !== undefined) {\n              const fieldDisplayName = getFieldDisplayName(oneValField, frm);\n              let discoveredField =\n                frm.name === undefined || frm.name === fieldDisplayName\n                  ? fieldDisplayName\n                  : `${frm.name} (${fieldDisplayName})`;\n              availableSeries.push({ value: discoveredField, label: discoveredField });\n            }\n          });\n        });\n\n        return (\n          <div className=\"section gf-form-group\">\n            <h4 className=\"section-heading\">Boxes definitions</h4>\n            {options.boxes.map((oneBox, index) => (\n              <div key={index}>\n                <h5>Box #{index}</h5>\n                <div className=\"section gf-form-group\">\n                  <HorizontalGroup>\n                    <IconButton\n                      name=\"trash-alt\"\n                      size=\"xl\"\n                      surface=\"panel\"\n                      onClick={(event) => onDeleteBox(event, index)}\n                    />\n                    <IconButton name=\"copy\" size=\"xl\" surface=\"panel\" onClick={(event) => onCloneBox(event, oneBox)} />\n                  </HorizontalGroup>\n                </div>\n                <div className=\"section gf-form-group\">\n                  <h5 className=\"section-heading\">Metric</h5>\n                  <HorizontalGroup>\n                    <Field label=\"Name\">\n                      <Input type=\"text\" readOnly={true} value={oneBox.serie} width={16} />\n                    </Field>\n                    <ValuePicker\n                      label=\"Change Metric\"\n                      icon=\"exchange-alt\"\n                      options={availableSeries}\n                      onChange={(selectedItem) => onBoxSerieUpdated(selectedItem.value, oneBox)}\n                      variant=\"secondary\"\n                      size=\"sm\"\n                    />\n                    <Field label=\"Prefix\">\n                      <Input\n                        type=\"text\"\n                        onChange={(event) => onBoxPrefixChanged(event, oneBox)}\n                        value={oneBox.prefix}\n                      />\n                    </Field>\n                    <Field label=\"Suffix\">\n                      <Input\n                        type=\"text\"\n                        onChange={(event) => onBoxSuffixChanged(event, oneBox)}\n                        value={oneBox.suffix}\n                      />\n                    </Field>\n                  </HorizontalGroup>\n                  <HorizontalGroup>\n                    {oneBox.prefix ? (\n                      <>\n                        <Field label=\"Prefix size\">\n                          <Input\n                            type=\"text\"\n                            onChange={(event) => onBoxPrefixFontSizeChanged(event, oneBox)}\n                            value={oneBox.prefixSize}\n                          />\n                        </Field>\n                      </>\n                    ) : null}\n                    {oneBox.suffix ? (\n                      <>\n                        <Field label=\"Suffix size\">\n                          <Input\n                            type=\"text\"\n                            onChange={(event) => onBoxSuffixFontSizeChanged(event, oneBox)}\n                            value={oneBox.suffixSize}\n                          />\n                        </Field>\n                      </>\n                    ) : null}\n                  </HorizontalGroup>\n                </div>\n                <div className=\"section gf-form-group\">\n                  <h5 className=\"section-heading\">Position and Link</h5>\n                  <Tooltip\n                    theme=\"info\"\n                    content={\n                      <p>\n                        You can easily find the coordinates if you <code>ctrl</code>+<code>left click</code>anywhere on\n                        your image\n                      </p>\n                    }\n                  >\n                    <Icon name=\"info-circle\" />\n                  </Tooltip>\n                  <HorizontalGroup>\n                    <Field label=\"X\">\n                      <Input type=\"text\" onChange={(event) => onBoxXposChanged(event, oneBox)} value={oneBox.xpos} />\n                    </Field>\n                    <Field label=\"Y\">\n                      <Input type=\"text\" onChange={(event) => onBoxYposChanged(event, oneBox)} value={oneBox.ypos} />\n                    </Field>\n                  </HorizontalGroup>\n                  <HorizontalGroup>\n                    <Field label=\"Angle\">\n                      <Input type=\"text\" onChange={(event) => onBoxAngleChanged(event, oneBox)} value={oneBox.angle} />\n                    </Field>\n                    <Field label=\"Link\">\n                      <Input type=\"text\" onChange={(event) => onBoxUrlChanged(event, oneBox)} value={oneBox.url} />\n                    </Field>\n                  </HorizontalGroup>\n                </div>\n                <div className=\"section gf-form-group\">\n                  <h5 className=\"section-heading\">Appearance</h5>\n                  <HorizontalGroup>\n                    <Field label=\"Decimal\">\n                      <Input\n                        type=\"text\"\n                        onChange={(event) => onBoxDecimalChanged(event, oneBox)}\n                        value={oneBox.decimal}\n                      />\n                    </Field>\n                    <Field label=\"Font-size\">\n                      <Input\n                        type=\"text\"\n                        onChange={(event) => onBoxFontsizeChanged(event, oneBox)}\n                        value={oneBox.fontSize}\n                      />\n                    </Field>\n                  </HorizontalGroup>\n                  <HorizontalGroup>\n                    <div className=\"width-5\">\n                      <Field label=\"Show Orb\">\n                        <Switch\n                          value={oneBox.hasOrb}\n                          checked={oneBox.hasOrb}\n                          onChange={(event) => onBoxOrbChanged(event, oneBox)}\n                        />\n                      </Field>\n                    </div>\n                    {oneBox.hasOrb ? (\n                      <>\n                        <div className=\"width-6\">\n                          <Field label=\"Hide text\">\n                            <Switch\n                              checked={oneBox.orbHideText}\n                              onChange={(event) => onBoxOrbHideTextChanged(event, oneBox)}\n                            />\n                          </Field>\n                        </div>\n                        {!oneBox.orbHideText ? (\n                          <>\n                            <div className=\"width-12\">\n                              <Field label=\"Orb Location\">\n                                <Select\n                                  options={orbLocations}\n                                  onChange={(v) => onBoxOrbLocationChanged(v, oneBox)}\n                                  value={oneBox.orbLocation}\n                                />\n                              </Field>\n                            </div>\n                          </>\n                        ) : null}\n                        <div>\n                          <Field label=\"Orb Size\">\n                            <Input\n                              type=\"text\"\n                              value={oneBox.orbSize}\n                              onChange={(event) => onBoxOrbSizeChanged(event, oneBox)}\n                            />\n                          </Field>\n                        </div>\n                      </>\n                    ) : null}\n                  </HorizontalGroup>\n                  <HorizontalGroup>\n                    <Field label=\"Use Thresholds\">\n                      <Switch\n                        onChange={(event) => onBoxUseThresholdsChanged(event, oneBox)}\n                        value={oneBox.isUsingThresholds}\n                      />\n                    </Field>\n                    {oneBox.isUsingThresholds ? (\n                      <>\n                        <Tooltip\n                          content={\n                            <p>\n                              Enter 2 comma-separated numbers. 20,60 will produce: <code>value &lt;= 20</code> -&gt;\n                              green <br />\n                              <code>value between 20 and 60</code> -&gt; yellow <br />\n                              <code>value &gt;= 60</code> -&gt; red{' '}\n                            </p>\n                          }\n                        >\n                          <Icon name=\"info-circle\" />\n                        </Tooltip>\n                        <Field label=\"Thresholds\">\n                          <Input\n                            type=\"text\"\n                            onChange={(event) => onBoxThresholdsChanged(event, oneBox)}\n                            value={oneBox.thresholds}\n                          />\n                        </Field>\n                        <HorizontalGroup>\n                          <ColorPicker\n                            color={oneBox.colorLow}\n                            onChange={(color) => onBoxColorLowChanged(color, oneBox)}\n                          />\n\n                          <ColorPicker\n                            color={oneBox.colorMedium}\n                            onChange={(color) => onBoxColorMediumChanged(color, oneBox)}\n                          />\n\n                          <ColorPicker\n                            color={oneBox.colorHigh}\n                            onChange={(color) => onBoxColorHighChanged(color, oneBox)}\n                          />\n                        </HorizontalGroup>\n                      </>\n                    ) : (\n                      <Field label=\"Color\">\n                        <ColorPicker color={oneBox.color} onChange={(color) => onBoxColorChanged(color, oneBox)} />\n                      </Field>\n                    )}\n                  </HorizontalGroup>\n                  {oneBox.isUsingThresholds ? (\n                    <HorizontalGroup>\n                      <Field label=\"Blink if low\">\n                        <Switch onChange={(event) => onBoxBlinkLowChanged(event, oneBox)} value={oneBox.blinkLow} />\n                      </Field>\n                      <Field label=\"Blink if high\">\n                        <Switch onChange={(event) => onBoxBlinkHighChanged(event, oneBox)} value={oneBox.blinkHigh} />\n                      </Field>\n                    </HorizontalGroup>\n                  ) : null}\n                  {/* <HorizontalGroup>\n                    <Field label=\"Show the background\">\n                      <Switch\n                        onChange={(event) => onBoxHasBackgroundChanged(event, oneBox)}\n                        value={oneBox.hasBackground}\n                      />\n                    </Field>\n                    {oneBox.hasBackground ? (\n                      <HorizontalGroup>\n                        <Field label=\"Color\">\n                          <ColorPicker\n                            color={oneBox.backgroundColor}\n                            onChange={color => onBoxBackgroundColorChanged(color, oneBox)}\n                          />\n                        </Field>\n                      </HorizontalGroup>\n                    ) : null}\n                  </HorizontalGroup> */}\n                </div>\n                <hr />\n              </div>\n            ))}\n            <Button variant=\"primary\" size=\"md\" icon=\"plus\" onClick={onAddBoxBtnClicked}>\n              Add a box\n            </Button>\n          </div>\n        );\n      },\n    });\n  })\n  .setMigrationHandler(MigHandler);\n"],"sourceRoot":""}